;
; BIND data file for {{ bind__internal_network }}
; This file is generated by ansible
;
$TTL    {{ bind__default_ttl }}
@   IN  SOA {{ bind__internal_hostname }}.{{ bind__internal_domain }}. root.{{ bind__internal_domain }}. (
            {{ bind__serialnum }}     ; Serial
            {{ bind__default_refresh }}     ; Refresh
            {{ bind__default_retry }}     ; Retry
            {{ bind__default_expire }}     ; Expire
            {{ bind__default_negative_cache_ttl }} )   ; Negative Cache TTL

;Info serveur DNS
@   IN  NS  {{ ansible_hostname }}.{{ bind__internal_domain }}.

; DYNAMIC HOSTNAME RECORDS
{% for server in groups[bind__dynamic_group|default('all')]|sort %}
{%   if 'ansible_all_ipv4_addresses' in hostvars[server].keys() %}
{%     for ip in hostvars[server]['ansible_all_ipv4_addresses']|ipaddr(bind__internal_network) %}
{{ '%-3s'|format(ip.split('.')[3]) }} IN PTR {{ hostvars[server]['ansible_hostname'] }}.{{ bind__internal_domain }}.
{%     endfor %}
{%   elif bind__static_ips is defined and server.split('.')[0] in bind__static_ips.keys() %}
{%     if bind__static_ips[server.split('.')[0]]|ipaddr(bind__internal_network) %}
{{ '%-3s'|format(bind__static_ips[server.split('.')[0]].split('.')[3]) }} IN PTR {{ server }}
{%     endif %}
{%   else %}
; {{ server }} UNKNOWN  no ipv4 !!
{%   endif %}
{% endfor %}
{% if bind__static_reverse is defined %}

; STATIC REVERSE RECORDS
{%   for host, ip in bind__static_reverse|dictsort %}
{%     if ip | ipaddr(bind__internal_network) %}
{{ '%-3s'|format(ip.split('.')[3]) }} IN PTR {{ host }}.{{ bind__internal_domain }}.
{%     endif %}
{%   endfor %}
{% endif %}
